import{Grid as e}from"./grid.js";import{aStar as t}from"./algorithms/aStar.js";import{BFS as l}from"./algorithms/BFS.js";import{DFS as o}from"./algorithms/DFS.js";import{RS as n}from"./algorithms/RS.js";import{randomMaze as r}from"./maze/randomMaze.js";import{recursiveMaze as a}from"./maze/recursiveMaze.js";let grid=document.querySelector("#grid"),toggleWall=document.querySelector("#toggleWall"),randMaze=document.getElementsByClassName("randMaze"),recurMaze=document.getElementById("recursiveMaze"),slider=document.getElementById("speed"),stats=document.getElementById("console"),clear=document.getElementById("clear"),search=document.getElementsByClassName("search"),clearBoard=document.getElementById("clearBoard"),preload=document.getElementById("preload"),timer=e=>new Promise(t=>setTimeout(t,e));var row,rowCount,rowSize,initialWidth,startNode=!1,endNode=!1,isToggling=!1,pathExists=!1,deleteWalls=!1,count=1,disableSearch=!1,preloadHeight=80;export var speed=.1;for(let i=0;i<search.length;i++)search[i].addEventListener("click",()=>{computeArr(search[i].id)});for(let i=0;i<randMaze.length;i++)randMaze[i].addEventListener("click",()=>{r(rowSize,rowCount,randMaze[i].id)});export function createBoard(){let e=window.innerWidth,t=window.innerHeight,l=Math.round((e-20)/20),o=Math.round(.75*(t/20));rowCount=o,rowSize=l,initialWidth=e,grid.style.minWidth=l,grid.onmousedown=enableToggle;for(let n=0;n<o;n++){let r=document.createElement("div");r.className="row",r.id=`row${n+1}`;for(let a=0;a<l;a++){let s=document.createElement("div");s.className="node",s.id=`node${n*l+(a+1)}`,3===n&&3===a&&(s.classList.add("start"),startNode=!0),n===o-4&&a===l-4&&(s.classList.add("end"),endNode=!0),s.onmouseenter=toggle,r.appendChild(s)}grid.appendChild(r),preloadHeight-=4,preload.style.height=`${preloadHeight}vh`}document.onmouseup=disableToggle,row=document.querySelector("#row1"),preload.style.display="none"}function clicked(e){let t=document.querySelector(`#${e}`).classList;if(!t.contains("row")){if(t.contains("start")){t.remove("start"),startNode=!1;return}if(t.contains("end")){t.remove("end"),endNode=!1;return}startNode&&endNode?t.contains("start")||(deleteWalls?t.remove("wall"):t.add("wall")):startNode?endNode||(make(e,"end"),endNode=!0):(make(e,"start"),startNode=!0)}}function make(e,t){let l=document.querySelector(`#${e}`);l.classList.remove("wall"),l.classList.add(`${t}`)}function enableToggle(e){isToggling=!0,toggle(e)}function disableToggle(){isToggling=!1}function toggle(e){!1!==isToggling&&clicked(e.target.id)}export function computeArr(r){let a=grid.childElementCount,s=row.childElementCount,d=Array(a),c=1;for(let g=0;g<a;g++){d[g]=Array(s);for(let p=0;p<s;p++){let m=document.getElementById(`node${c}`).classList,u=0;u=m.contains("start")?2:m.contains("end")?3:m.contains("wall")?1:0,d[g][p]=u,c++}}var h=new e(d,1);"astar"===r?t(h,0):"BFS"===r?l(h):"DFS"===r?o(h):"RS"==r&&n(h)}export function createPath(e){let t=row.childElementCount;async function l(){for(let l=e.length-1;l>0;l--){let o=e[l].x,n=e[l].y,r=document.getElementById(`node${n*t+(o+1)}`);await timer(1500/e.length),r.classList.remove("visited"),r.classList.add("path")}}pathExists&&clearGrid(),l(),pathExists=!0,toggleButtons()}export function clearGrid(e){let t=row.childElementCount;for(let l=0;l<grid.childElementCount;l++)for(let o=0;o<t;o++){let n=document.getElementById(`node${l*t+(o+1)}`);n.classList.remove("path","visited","opened"),n.innerHTML="",1===e&&n.classList.remove("wall")}pathExists=!1}toggleWall.addEventListener("click",()=>{(deleteWalls=!deleteWalls)?toggleWall.innerText="Add wall":toggleWall.innerText="Delete Wall"});export function displayNoPath(){let e=document.getElementById("popup");e.style.zIndex="11",e.style.opacity="0.95",e.style.transition="opacity 0s",setTimeout(()=>{e.style.transition="opacity 1.7s",e.style.opacity="0",setTimeout(()=>{e.style.zIndex="0"},1700)},400)}window.addEventListener("resize",()=>{let e=document.getElementById("container");window.innerWidth>=initialWidth?e.style.display="flex":e.style.display="inline-block"});export function explore(e,t){let l=document.getElementById(`node${t*rowSize+(e+1)}`);l.classList.remove("opened","path"),l.classList.add("visited")}export function displayFCost(e,t,l,o,n){document.getElementById(`node${t*rowSize+(e+1)}`).innerHTML=`<p>F:${l}</p><p>G:${o}</p><p>H:${n}</p>`}export function displayOpened(e,t){document.getElementById(`node${t*rowSize+(e+1)}`).classList.add("opened")}export function makeWall(e,t){document.getElementById(`node${t*rowSize+(e+1)}`).classList.add("wall")}slider.addEventListener("input",()=>{speed=1-slider.value},!1);export function addConsole(e,t,l,o){let n=`<p>[${count}] ${e} visited ${t} nodes in ${l}s. Path length: ${o}</p><br>`;stats.innerHTML+=n,count++,stats.scrollTop=stats.scrollHeight}export function timeDiff(e){let t=new Date-e;return Math.round(1e3*(t/=1e3))/1e3}export function toggleButtons(){disableSearch=!disableSearch}clear.addEventListener("click",()=>{clearGrid()}),clearBoard.addEventListener("click",()=>{clearGrid(1)});